// 라우팅 어떤 네트워크 안에서 데이터를 최적의 경로를 선택하는 과정



// 싱글페이지 어플리케이션 이란
// 전통적은 웹방식은 새로운 페이지를 요청할때바다  정적리소스를 다운받고 전체페이지를  다시  렌더링 되는데  새로고침이 되어 사용성이 좋지 못하고
// , 이때 불필요한 부분도 화면이 갱신이 되 비효율적이다
// 싱글 페이지 어플리케이션은 페이지 전환에 의한 렌더링을 클라이언트에서 처리
//서버로부터 페이지를 가져오는것이 아니라 클라이언트에서 처리한다





// 단일 페이지 만들기위해서는 브라우저 히스토리 api 를 기반으로한 react-router-dom 패키지를 이용해서 간단한 단일 페이지 어플리케이션

// 라우팅(Routing)
// 라우팅(Routing)이란 경로(URL)에 따라 페이지의 이동을 설정하는 것입니다

// 브라우저 히스토리 api
// 싱글페이지 어플리케이션 을 만들어야하는 조건
// 자바스크립트에서 브라우저로 페이지전환요청 을 할수있따
// 뒤로가기 같은 사용자 페이전환 요청을 자바스크립트에서 할수있다 
// 이때 브라우저는 서버로 요청을 보내지 않아야한다

//이 조건을 만족하는게 pushState, replaceState 함수 popState 이벤트
// pushState 는 페이지 이동 없이 주소만 바꿔준다 이때 state
// popstate 이벤트가 발생하면 페이지 전환 한다는 의미
// replaceState  스택에 쌓지 않고 가장 최신의 state로 대체 한다


// BrowserRouter 는 html5의 history API를 사용해서 UI를 업데이트하는 것이다.



// 싱글 페이지 어플리케이션 구현 할떄 옳은 문장 골라 보세요 보기에서 두개를 고르시오
// 1. 서버에서 페이지 전환을 시켜준다
// 2. 뒤로가기 클릭 했을때 자바스크립트에서 요청 할 수 있다
// 3. 브라우저는 페이지 전환할때 서버에 한번 요청을 한다
// 4. 브라우저에는 히스토리에 state를 저장하는 스택이 존재 한다



// 싱글 페이지 어플리케이션은
// 초기에 서버에 한번 조회하고 그후의 라우팅은 클라이언트에서 처리하는 웹어플리케이션 이다

