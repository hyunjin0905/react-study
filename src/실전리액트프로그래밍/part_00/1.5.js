// 라우팅 어떤 네트워크 안에서 데이터를 최적의 경로를 선택하는 과정

// 단일 페이지 애플리케이션 만들기
// 리액트 페이지 개발하는 방식은 싱글 페이지 어플리케이션 방식으로 개발
//전통적인 방식은
// 클라이언트 -> 서버에 요청하면 페이지를 보여주는 방식인데
// 싱글 페이지 어플리케이션 방식은
// 클라이언트에서 페이지 전환의한 렌더링 방식은 클라이언트에서 처리

//
//
// 전통적인 서버사이드 렌더링 입니다
// 브라우저는 블로그 요청을 합니다
// 프론트는 서버로 데이터 요청을 합니다   프론트는 백엔드로 데이터 요청 백엔드는 디비 에 데이터 요청
// 다시 데이터베이스틑 결과를 백엔드에 전달 백엔드는 프론트에 전달프론트는 hmtl 합쳐서 브라우저에 전달
//
//
// 싱글 페이지 어플리케이션
// SPA
//
// js html css img 요런거만 내려줍니다 데이터는 없어요
// 브라우저에서는 화면은 그려주는데
// 프론트엔드는 로딩 창을 그려줘
// 한번더 백엔드로서버로 게시글 요청
// 백엔드 서버는 실제 데이터 베이스 요청 브라우저로 옮겨줘
//
// 브라우저는 화면을 그려준다
// 싱글 어플리케이션의 개념이다



// 단일 페이지 만들기위해서는 브라우저 히스토리 api 를 기반으로한 react-router-dom 패키지를 이용해서 간단한 단일 페이지 어플리케이션


// 브라우저 히스토리 api
// 싱글페이지 어플리케이션 을 만들어야하는 조건
// 클라이언트가 서버로 요청하지 않는 조건으로 페이지 전환이 필요

//이 조건을 만족하는게 pushState, replaceState 함수 popState 이벤트

// popstate 이벤트가 발생하면 페이지 전환 한다는 의미
// replaceState  스택에 쌓지 않고 가장 최신의 state로 대체 한다


// 싱글 페이지 어플리케이션 구현 할떄 옳은 문장 골라 보세요 보기에서 두개를 고르시오
// 1. 서버에서 페이지 전환을 시켜준다
// 2. 뒤로가기 클릭 했을때 자바스크립트에서 요청 할 수 있다
// 3. 브라우저는 페이지 전환할때 서버에 한번 요청을 한다
// 4. 브라우저에는 히스토리에 state를 저장하는 스택이 존재 한다



